<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>维唯为为</title>
  <link href="https://luowei.github.io/atom.xml" rel="self"/>
  <link href="https://luowei.github.io"/>
  <updated>2021-01-01T20:27:46+08:00</updated>
  <id>https://luowei.github.io</id>
  <author>
    <name>luowei</name>
    <email>luowei010101@gmail.com</email>
  </author>


  <entry>
    <title>文学与文化</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094421226098.html"/>
    <updated>2021-01-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094421226098</id>
    <content type="html">
文学与文化



现在很多人学习文化，读了几十年的书，对文学与文化这两个概念都没有理解。可能很多人会这样简单的理解，包括我自己以前也这样认为的。以为文学就是文字学，文化就是文字化，以为文学的目的就是学习文字、学会认字读书看报，以为文化的目的就是让大众都能认字读书看报。

其实文学与文化远不是如此，文学与文化是承载着人类文明的发展责任的。

现在想来过去自己的理解在根本上就是错误的，文学应该是理解成文明学、文化应该理解成文明化。文学的作用是让人知是非善恶美丑、成为有良知的文明人，而文化的作用是让大众脱离野蛮状态变得有文明有礼仪，让整个社会摆脱动物界的丛林法实现和谐文明化。
</content>
  </entry>

  <entry>
    <title>2020年还是买了很多书</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094363070955.html"/>
    <updated>2021-01-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094363070955</id>
    <content type="html">
2020年还是买了很多书

对于不懂的与未知的，最大的幸事莫过于还有很多书可以翻。
2020年还是买了很多书，虽然很多书没有读，或只读了一部分就放在那了，但还是买了很多书。





还有最近经常在翻的几本书，放在一边没拍上，也补上。

</content>
  </entry>

  <entry>
    <title>2020年印(影)象(响)深刻的大家们</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094339866828.html"/>
    <updated>2021-01-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16094339866828</id>
    <content type="html">
2020年印(影)象(响)深刻的大家们

记得我第一次去上海图书馆时最让我莫名难忘又震撼的是图书馆门前的思想者雕像，到现在还是有一种用言语说不明白的印象深刻。

数说这十年印(影)象(响)深刻的大家们。
十年前的余世维、郎咸平们，五年前的高晓松、罗振宇、宋鸿兵们，他们的思想观念虽然让人有所成长，但并没有让人弄清是非价值，也没让人活明白或者说是没唤醒什么。2020年是思想觉醒的一年，也是慢慢明白的一年，读懂了鲁讯、陈丹青、许知远们所写的文化与艺术，理解了秦晖、易中天、袁腾飞们所说的历史，明白了张维迎、张五常、贺卫方们所讲的经济与法治，……


</content>
  </entry>

  <entry>
    <title>Fastlane自动打包配置</title>
    <link href="https://luowei.github.io/ios/16093382846124.html"/>
    <updated>2020-12-30T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/16093382846124</id>
    <content type="html">
Fastlane自动打包配置

Fastlane自动打包配置，主要是编辑Fastfile，下面给一个简单的示例，代码如下：
default_platform(:ios)

platform :ios do
  desc &quot;Description of what the lane does&quot;
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  # source &quot;https://gems-china.org&quot;

  lane :buildApp do

  ...</content>
  </entry>

  <entry>
    <title>开小灶</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16080116747063.html"/>
    <updated>2020-12-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16080116747063</id>
    <content type="html">
开小灶



关于开小灶这事，之前看到在一个评选节目上看到马云质问批责一个候选人，在公司替老板上班的时候自己业余也搞了一个小网站的行为。

看后时常在思考对这个问题的价值判断，从人性的角度看也总觉得马云这个批评质问总欠缺些什么。现在仔细一想这就是不准人家开小灶，剥夺个人的私有权力。

如果说那个候选人是因为工作时间自己开小灶导致没有完成公事，那是这候选人的不对；如果人家很好的完成了公事还禁止人家开小灶，那就是剥夺个人的私人空间了，并且还会打击员工的积极性，让本来很有能力的人会要磨洋工。

允许员工在完成公事后，可以自己开小灶，这会极大的激发员工的积极性，因为人都有私心，都想更快更有效率...</content>
  </entry>

  <entry>
    <title>iOS 中 NSProxy 的特性与应用</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16074772192999.html"/>
    <updated>2020-12-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16074772192999</id>
    <content type="html">
iOS 中 NSProxy 的特性与应用

NSProxy 的特性

  NSProxy的主要功能，负责把消息转发给真正的target的代理类；
  NSProxy没有继承NSObject，但是实现了NSObject协议，作为一个抽象类，它没有实现初始化方法，并且会在收到任何它不响应的消息时会引发异常；
  NSProxy的子类必须要实现一个初始化或创建方法，并要重写- (void)forwardInvocation:(NSInvocation *)invocation;和-(nullable NSMethodSignature *)methodSignatureForSelector...</content>
  </entry>

  <entry>
    <title>iOS 中常见的内存泄漏</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16074769341843.html"/>
    <updated>2020-12-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16074769341843</id>
    <content type="html">
iOS 中常见的内存泄漏

内存泄漏（memory leak）：是指申请的内存空间使用完毕之后未回收。
内存溢出（out of memory）：是指程序在申请内存时，没有足够的内存空间供其使用。


  delegate 变量没声明为 weak 类型；
  NSNotification没有移除通知；
  block强引用捕获外部变量；
  NSTimer在释放前未调用[timer invalidate]，对target强引用；
  performSelector:afterDelay只有在runloop为DefaultMode时才能成功，否则会对target强引用；
  提供了rele...</content>
  </entry>

  <entry>
    <title>Json学编程开发——B站直播间</title>
    <link href="https://luowei.github.io/%E7%9B%B4%E6%92%AD/16079545869098.html"/>
    <updated>2020-12-14T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E7%9B%B4%E6%92%AD/16079545869098</id>
    <content type="html">
Json学编程开发——B站直播间

B站直播间 
 直播间地址：https://live.bilibili.com/22683419

或者扫码可直接观看：
 

本周主要讲：
 iOS高级开发原理解析

会附带去零散一点知识点：
 1.讲日常编程开发，比如Shell、Java，Chrome；
 2.一个独立开发者的日常，读书； 
 3.提高工作效率与电脑使用效率的一些应用，Sublim，VSCode使用；
 4.日常常用的Shell脚本的写法； 
 5.应用开发，主要iOS平台上的应用开发；
</content>
  </entry>

  <entry>
    <title>深入理解iOS 中的 Runloop</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16074478217682.html"/>
    <updated>2020-12-12T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16074478217682</id>
    <content type="html">
深入理解iOS 中的 Runloop

我们知道Runloop本质上是一个执行死循环的对象，它跑起来后大多数时候是处于休眠等待状态，是不占用CPU资源的。我们先来看一下它是怎么做到的：

闲等待：在死循环里是如何不占用CPU资源的
所谓闲等待是在一个循环里，CPU不是一直在空转，没有任务处理时，就不占用CPU计算资源，让CPU就去干别的事。这一般都是通 过中断来实现的：

  中断是CPU停止正在运行的程序并转入处理新情况的程序，处理完毕后才返回原被暂停的程序继续运行；
  比如在阻塞IO中IO设备向CPU发一条IO中断信号，CPU就会暂停当前程序的处理去服务该I/O设备的程序；
  ...</content>
  </entry>

  <entry>
    <title>古代中国梦</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16074064214707.html"/>
    <updated>2020-12-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16074064214707</id>
    <content type="html">
古代中国梦

看历史，有人说古代中国老百姓有三个梦，暂且叫『古代中国梦』吧。


</content>
  </entry>

  <entry>
    <title>深入理解 iOS 中 GCD 原理</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16074006673494.html"/>
    <updated>2020-12-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16074006673494</id>
    <content type="html">
深入理解 iOS 中 GCD 原理

首先了解一下，计算机程序是怎样运行的，然后再具体讲 GCD 相关内容。

  当开始运行程序时，首先应把第一条指令所在存储单元的地址赋予程序计数器PC，然后机器就进入了取指阶段；
  在取指阶段，CPU从内存中读取的内容必为指令。然后送往数据缓冲寄存器DR，经DR送往指令寄存器IR；
  之后由指令译码器ID对IR中的指令的操作码字段进行译码，然后又PLA发出执行该指令所需要的各种微操作控制信号，取指阶段到此结束。
  之后，机器就进入执行指令阶段，这时CPU便执行指令所规定的具体操作。
  当一条指令执行完毕后，即转入下一条指令的取指阶段，如此循...</content>
  </entry>

  <entry>
    <title>Objective-C当中的Block</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16071202187230.html"/>
    <updated>2020-12-07T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16071202187230</id>
    <content type="html">
Objective-C当中的Block

Blocks是C语言的扩充功能，即带有自动变量(局部变量)的匿名函数。
使用clang可以通过添加-rewrite-objc编译选项将含有Block语法的源代码变换为C++的源代码，如用clang -rewrite-objc main.m会生成一个与main.m对等的main.cpp文件。

先看总结：

  当没有引入外部自动变量时，Block是__NSGlobalBlock__；
  当只引入了非自动变量(如void *、变量的类型)时，Block仍然是__NSGlobalBlock__；
  当引入了外部自动变量时，Block会变成__N...</content>
  </entry>

  <entry>
    <title>Objective-C中Class、NSObject、id的本质</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16072471272365.html"/>
    <updated>2020-12-06T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16072471272365</id>
    <content type="html">
Objective-C中Class、NSObject、id的本质

Class 与 objc_class

objc 中的结构体


  objc_ivar有四个成员属性，其中ivar_name, ivar_type, ivar_offset分别代表了属性的名称，类型，内存偏移量；
  objc_class 的定义是以结构的形式实现，包含有类本身及父类的信息，属性列表、方法列表、缓存和协议列表；
  objc_class中objc_ivar_list与其中的objc_ivar用于实现类的属性列表；objc_method_list与其中的objc_method用于实现类的方法列表；obj...</content>
  </entry>

  <entry>
    <title>Xcode断点调试与lldb常用命令</title>
    <link href="https://luowei.github.io/ios/16071825228878.html"/>
    <updated>2020-12-06T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/16071825228878</id>
    <content type="html">
Xcode断点调试与lldb常用命令

Xcode断点调试

断点
添加符号断点
我们可以使用方法名作为符号名，添加符号断点。添加符号断点左下角加号，如下图：


添加一个符号名为sayHello的符号断点。

然后，调试运行


编辑断点


添加断点行为，在断点时执行代码


创建条件断点，并在断点时打印函数调用的堆栈信息


lldb常用命令
LLDB 是一个有着 REPL 的特性和 C++ ,Python 插件的开源调试器。也可以安装 Chisel，它是一个开源的 LLDB 插件合辑这会使调试变得更加强大。

常用命令

  po：查看对象的 description 方法的结果...</content>
  </entry>

  <entry>
    <title>iOS里load与initialize方法总结</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16071300644840.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16071300644840</id>
    <content type="html">
iOS里load与initialize方法总结

+load方法

  load方法在main函数执行之前调用，具体调用是在dyld加载类时，在dyld_start之后由dyld调用；
  OC 运行时初始化时，会通过 dyld_register_image_state_change_handler 在每次有新的镜像加入运行时的时候，进行回调。执行 load_images 将所有包含 load 方法的文件加入列表 loadable_classes ，然后从这个列表中找到对应的 load 方法的实现，调用 load 方法。
  ObjC 对于加载的管理，主要使用了两个列表，分别是 loa...</content>
  </entry>

  <entry>
    <title>C语言中const关键字使用总结</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16071280152846.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16071280152846</id>
    <content type="html">
C语言中const关键字使用总结

用const关键字修饰的意义：

  只修饰变量，不修饰其他关键字；
  被修饰的部分不可变；
  但是不会改变变量的作用域和生命周期。


下面用几个例子来说明
案例1：
const int *p = &amp;amp;a

复制代码此时 const 修饰的是 *p。
*p 的意义是指针所指向的内存地址的值，所以此时的意思是指针 p 所指向的内存地址的值不可变;而指针 p的值，也就是其指向的内存地址可变；
所以当尝试使用 *p 改变被 const 修饰的常量时，编译器报错，只读的变量不可以被再次赋值，而修改指针 p 的指向时是可行的。

案例2：
int ...</content>
  </entry>

  <entry>
    <title>iOS中触发离屏渲染的本质原因与场景</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16071248803343.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16071248803343</id>
    <content type="html">
iOS中触发离屏渲染的本质原因与场景

当前屏幕渲染(On-Screen Rendering)：当前屏幕渲染，CPU、GPU 不停地将内容渲染完成放入frame buffer帧缓冲区中，显示屏幕从 frame buffer中获取内容显示。

离屏渲染(Off-Screen Rendering)：离屏渲染，先创建离屏渲染帧缓冲区offscreen frame buffer，然后逐一将内容渲染放入其中，完成后对离屏渲染缓冲区做阴影叠加、裁剪等操作，最后将结果拷贝或切换到帧缓冲区frame buffer中，显示屏幕从 frame buffer中获取内容显示。

触发离屏渲染的原因
因为离屏渲...</content>
  </entry>

  <entry>
    <title>Objective-C中的@property、@synthesize以及@dynamic</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16071202583411.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16071202583411</id>
    <content type="html">
Objective-C中的@property、@synthesize以及@dynamic

解读

  @property 的本质是实际上就是 ivar (实例变量) + 存取方法(getter + setter)。在属性定义完成后，编译器会自动生成该属性的 getter 和 setter 方法，这个过程就叫做自动合成。除了生成 getter 与 setter 方法，编译器还要自动向类中添加适当类型的实例变量，并且在属性名前面加下划线，以此做实例变量的名字;
  @synthesize 的作用就是如果没有手动实现 getter 与 setter 方法，那么编译器就会自动加上这两个方法；...</content>
  </entry>

  <entry>
    <title>Objective-C对象的浅拷贝与深拷贝探究</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070861382919.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070861382919</id>
    <content type="html">
Objective-C对象的浅拷贝与深拷贝探究

iOS提供了2个拷贝方法

  copy 不可变拷贝，产生不可变副本；
  mutableCopy可变拷贝，产生可变副本；


深拷贝和浅拷贝
深拷贝 内容拷贝，产生新的对象；
浅拷贝 指针拷贝，没有产生新的对象；

copy和mutableCopy 图解


  
    
       
      copy
      mutableCopy
    
  
  
    
      NSString
      NSString 浅拷贝
      NSMutableString深拷贝
    
    
      NSMu...</content>
  </entry>

  <entry>
    <title>iOS中的 calloc 及权限修饰符</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070288519590.html"/>
    <updated>2020-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070288519590</id>
    <content type="html">
iOS中的 calloc 及权限修饰符

内存分配：
NSObject的alloc类方法首先调用allocWithZone:类方法，这和GUNstep实现相机，然后调用class_createInstance函数，最后通过调用calloc来分配内存块。

calloc与malloc的区别在于：用calloc分配的内存区域会初始化为0；而使用malloc分配的内存区域是没有初始化为0的；如果使用malloc函数分配内存区域后还需要用memset等函数将内存填充为0，所以在OC里面推荐使用calloc分配内存；

GNUstep框架
iOS 里 Objective-C 中的内存管理是包含在...</content>
  </entry>

  <entry>
    <title>iOS weak 底层实现原理</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070583973992.html"/>
    <updated>2020-12-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070583973992</id>
    <content type="html">
iOS weak 底层实现原理

weak的原理在于底层维护了一张weak_table_t结构的hash表，Key是所指对象的地址，Value是weak指针的地址（这个地址的值是所指对象的地址）数组。

weak 的实现原理可以概括一下三步：

  初始化时：runtime会调用objc_initWeak函数，初始化一个新的weak指针指向对象的地址;
  添加引用时：objc_initWeak函数会调用 objc_storeWeak() 函数， objc_storeWeak() 的作用是更新指针指向，创建对应的弱引用表。
  释放时，调用clearDeallocating函数。cle...</content>
  </entry>

  <entry>
    <title>Autorelease 及 Autoreleasepool 原理</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070546104738.html"/>
    <updated>2020-12-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070546104738</id>
    <content type="html">
Autorelease 及 Autoreleasepool 原理

自动释放池在 MRC 模式与 ARC 模式下还是有些差异的。

MRC模式

  autorelease会像C语言的自动变量那样来对待对象实例。当超出变量作用域时，对象实例的release实例方法被调用。但同C语言自动变量不同的是，开发者可以设定变量的作用域，而其中的NSAutoreleasePool对象的生存周期就相当于C语言变量的作用域。
  要使用autorealse就需要生成并持有NSAutoreleasePool对象，而后把所有的autorealse实例添加到NSAutoreleasePool里，离开作用时，...</content>
  </entry>

  <entry>
    <title>C语言中的变量常量及其在虚拟内存中的分配</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070355852198.html"/>
    <updated>2020-12-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070355852198</id>
    <content type="html">
C语言中的变量常量及其在虚拟内存中的分配


  
    在C语言里，使用auto关键字声明自动变量，如果没有被声明为其他类型的变更 ，默认都是自动变量。(注意：auto关键字在C与C++里的用法不同，若编写C/C++兼容程序,最好不要使用auto作为存储类别说明符。)
  
  
    静态变量与自动变量的区别在于静在变量是在全局(静态)存储区内分配内存的单元(目标文件的.data段,未初始化的在.bss段),而自动变量则分配在动态存储区(栈区)；只有通过malloc或new生成的变量分配在堆区。
  
  
    全局变(常)量与静态变(常)量都是存储在全局(静态)存储区(即...</content>
  </entry>

  <entry>
    <title>计算机里的内存分配原理</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070353479002.html"/>
    <updated>2020-12-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070353479002</id>
    <content type="html">
计算机里的内存分配原理


  
    操作系统要求进程不能直接访问物理内存，而是为每个进程分配一块自己独立的虚拟空间，并且每个进程只能访问自己的虚拟地址空间。
  
  
    进程的虚拟空间是操作系统按分段或分页的方法映射到某个物理空间的，虚拟空间到物理空间的转换是依靠CPU里一个叫 MMU 的部件来支持的。
  
  
    现代计算机主要是采用页映射的方式来划分地址空间，即把地址空间人为等分成固定大小的页，这个页大小为硬件决定。
  
  
    把虚拟空间的页叫虚拟页(Virtual Page，VP)，物理内存中的页叫物理页(Physical Page，PP)，把磁盘...</content>
  </entry>

  <entry>
    <title>C语言字节对齐及结构体对齐详解</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16070329191495.html"/>
    <updated>2020-12-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16070329191495</id>
    <content type="html">
C语言字节对齐及结构体对齐详解

为什么需要字节对齐
对齐与数据在内存中的位置相关，若一个变量的内存地址正好位于它长度的整数倍，那么就称做自然对齐。如在32位CPU下，假设一个整型变量的地址为0x00000004，那它就是自然对齐的。

字节对齐的作用不仅有利于CPU快速访问，同时合理的利用字节对齐还可以有效地节省内存。
如果上面整型变量的地址不是自然对齐，比如为0x00000002，则CPU如果取它的值的话需要访问两次内存，第一次取从0x00000002-0x00000003的一个short，第二次取从0x00000004-0x00000005的一个short然后组合得到所要的数据，...</content>
  </entry>

  <entry>
    <title>动态链接深入详解</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16069042964193.html"/>
    <updated>2020-12-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16069042964193</id>
    <content type="html">
动态链接深入详解

动态链接：为了解决内存及磁盘空间的浪费和更新困难的问题，把程序的链接过程推迟到运行时再进行，就是动态链接的基本思想。让程序在运行时可以动态地选择加载各种程序模块，实现程序功能的扩展，另一方面也可加强程序的兼容的。

动态链接运行时地址空间分布：对于动态链接程序来说，除了可执行文件本身之外，还有它所依赖的共享目标文件。其共享对象的最终装载地址在编译时是不确定的，而是在装载时，装载器根据当前地址空间的空闲情况动态分配一块足够大小的虚拟地址空间给相应的共享对象。

编译一个共享对象,-shared表示生生共享对象，-fPIC表示产生地址无关代码；
gcc -fPIC -s...</content>
  </entry>

  <entry>
    <title>ELF文件的装载与Linux的进程</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16068978581321.html"/>
    <updated>2020-12-02T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16068978581321</id>
    <content type="html">
ELF文件的装载与Linux的进程

进程的虚拟地址空间
 查看进程虚拟空间分布
cat /proc/&amp;lt;pid&amp;gt;/maps


PAE(物理地址扩展)
在CPU字长不变的情况下，扩展地址线长度，修改页映射方式，便使新映射方式可以访问更多的物理内存。

程序的动态装载方法：覆盖装入(Overlay)、页映射(Paging)

可执行文件的装载：
 1.进程的建立；
 2.页错误；

Segment(程序头) 与 Section(段表)
 Segment 是从装载的角度重新划分ELF的各个段；

# 使用静态链接方式编译链接可执行文件
gcc -static SectionMa...</content>
  </entry>

  <entry>
    <title>静态链接的深入探究</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16068883427102.html"/>
    <updated>2020-12-02T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16068883427102</id>
    <content type="html">
静态链接的深入探究

首先使用gcc编译两个目标文件,生成a.o、b.o ：
gcc -c a.c b.c 

链接器对目标文件的链接过程中对输入的多个目标文件加工后合并成一个输出文件，合并的过程是将输入文件相同性质的段合并到一起，比如将所有输入文件的”.text”合并到输出文件的”.text”段。

链接器的空间分配策略第一步：空间与地址分配；第二步：符号解析与重定位；
将a.o与b.o链接起来：
ld a.o b.o -e main -ab


  -e main 表示将 main 函数作为程序入口，ld链接器默认的程序入口为_start;
  -o ab 表示链接输出文件名为 a...</content>
  </entry>

  <entry>
    <title>读《商君书》，叹驭民五术</title>
    <link href="https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16068398400651.html"/>
    <updated>2020-12-02T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BB%E4%B9%A6/16068398400651</id>
    <content type="html">
读《商君书》，叹驭民五术



1、愚民：统一思想，大一统，赞颂君王的赫赫武功。（反面：自由主义）
2、弱民：国强民弱，治国之道，务在弱民。
3、疲民：为民寻事，疲于奔命，使民无瑕顾及他事。 
4、辱民：一无自尊自信；二唆之相互检举揭发，使人人自危于恐惧中。
5、贫民：除了生活必须，剥夺余银余财；人穷志短。

五皆不灵，杀之。
</content>
  </entry>

  <entry>
    <title>在main方法之前调用函数</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16068138551893.html"/>
    <updated>2020-12-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16068138551893</id>
    <content type="html">
在main方法之前调用函数

方法一：根据glibc的全局构造函数是放在.ctors段中，的怪可以在.ctors段中添加一些函数指针，就可以让这些函数在全局构造的时候调用了，如下：
#include &amp;lt;stdio.h&amp;gt;

void my_init(void){
    printf(&quot;Hello &quot;);
}

typedef void(*ctor_t)(void);
//向.ctors段中添加一个函数指针
ctor_t __attribute__((section (&quot;.ctors&quot;))) my_init_p = &amp;amp;my_init;

int main(){
   ...</content>
  </entry>

  <entry>
    <title>setjmp的工作原理</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16067856417927.html"/>
    <updated>2020-12-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16067856417927</id>
    <content type="html">
setjmp的工作原理

执行环境
简单说就是CPU中的一些寄存器，这些寄存器保存了程序执行的必要信息，以x86为例：

  esp 保存当前栈顶的地址。
  ebp 保存当前函数栈帧的地址，在函数的进入点处，把esp保存到ebp，这样在函数任何位置，都可以通过ebp加偏移拿到函数的参数。
  eip 保存下一条指令的地址。


函数调用约定
函数的调用约定，对寄存器也有影响，以x86的cdecl(这是C语言函数的调用约定)为例：

  函数参数通过栈传递，顺序从右到左，并且由调用者负责清理栈中的参数。
  整型值和内存地址通过eax返回。
  eax, ecx, edx由调用者负责保...</content>
  </entry>

  <entry>
    <title>可执行文件详解之ELF目标文件</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16065812543516.html"/>
    <updated>2020-11-29T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16065812543516</id>
    <content type="html">
可执行文件详解之ELF目标文件

目标文件格式：windows 下的PE(Portable Executable)、Linux 的ELF(Executable Linkable Format)以及 macOS 的Mach-O 格式。

ELF文件类型：可重定位文件(Linux 的.o，Windows 的.obj)；可执行文件(如/bin/bash文件，Windows 的.exe)；共享目标文件(Linux 的.so，Windows 的DLL)；核心转储文件(Linux 下的core dump).

注意：使用gcc -c hello.c，使用-c参数表示只编译，生成的目标文件只编译不链...</content>
  </entry>

  <entry>
    <title>程序的构建过程</title>
    <link href="https://luowei.github.io/%E5%8E%9F%E7%90%86/16065156342248.html"/>
    <updated>2020-11-28T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%8E%9F%E7%90%86/16065156342248</id>
    <content type="html">
程序的构建过程

以最简单的hello.c为例

#include &amp;lt;stdio.h&amp;gt;

int main() {
    printf(&quot;Hello World\n&quot;);
    return 0;
}


gcc hello.c 做了什么事情？

预处理(也叫预编译Prepressing) -&amp;gt; 编译(Compilation) -&amp;gt; 汇编(Assembly) -&amp;gt; 链接(Linking)

预编译
处理源文件中以#开头的预编译指令、删除注释、添加行号与文件标识等。
.c文件预编译成.i文件,.cpp文件成.ii文件，使用gcc 加-E 选项表示只进行预...</content>
  </entry>

  <entry>
    <title>万能浏览器</title>
    <link href="https://luowei.github.io/%E4%B8%87%E8%83%BD%E8%BE%93%E5%85%A5%E6%B3%95/16063281631235.html"/>
    <updated>2020-11-26T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E4%B8%87%E8%83%BD%E8%BE%93%E5%85%A5%E6%B3%95/16063281631235</id>
    <content type="html">
万能浏览器

扫码下载




简体中文
=======

万能浏览器 - 一个可个性化的自定义浏览器

万能浏览器是一款可以自定义首页的浏览器；

万能浏览器特点:
可以自定义首页，添加自己喜欢的导航网址；
支持iCloud备份同步浏览器个性化设置；
支持多窗口与历史记录访问；
支持无痕模式与普通模式浏览；
支持网页浏览滚动自动全屏；
支持日间模式与深色模式；
支持无图模式与广告拦截；
支持一键清除上网痕迹；
支持文件下载与文件浏览、管理；
支持离线缓存让网页打开更快；
支持书签的添加与自定义；
支持扫描二维码打开页面；
支持分享页面、网址及系统浏览器打开；
支持网页捏合截图、长截图...</content>
  </entry>

  <entry>
    <title>使用 macOS 程序员的常用软件</title>
    <link href="https://luowei.github.io/macos/16059975716032.html"/>
    <updated>2020-11-22T00:00:00+08:00</updated>
    <id>https://luowei.github.io/macos/16059975716032</id>
    <content type="html">
使用 macOS 程序员的常用软件

Alfred : 快捷搜索

  参考：程序员的macOS系列：高效Alfred进阶


iTerm/Termius : 终端 
JetBrains系列工具
Dash : 文档查询
VSCode : 开发工具
xcode ： 开发工具
DBeaver ： 看数据库
Robo 3 T ： MongoDB管理
Snappy : 代码片段截图置顶
Parallels Client : 连windows server
Beyond Compare : 文件对比
TeamViewer/Splashtop Streamer : 远程屏幕控制
Charles/P...</content>
  </entry>

  <entry>
    <title>静态链接与动态链接的原理与区别</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995892950324.html"/>
    <updated>2020-09-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995892950324</id>
    <content type="html">
静态链接与动态链接的原理与区别

源文件先是被编译成一个个目标文件, 再由链接器把这些目标文件组合成一个可执行文件或库。链接的过程，其核心工作是解决模块间各种符号(变量，函数)相互引用的问题，对符号的引用本质是对其在内存中具体地址的引用，因此确定符号地址是编译，链接，加载过程中一项不可缺少的工作，这就是所谓的符号重定位。
对于可执行文件或静态库来说，符号重定位是在链接时完成的。对于动态链接库来说，因为动态库的加载是在运行时，且加载的地址不固定，因此动态库的符号重定位是推迟进行的，主要有两种方式：加载时符号重定位及地址无关代码。

加载时符号重定位
加载时重定位，其原理很简单，它与链接时...</content>
  </entry>

  <entry>
    <title>iOS问题汇总之iOS应用 - Flutter混合开发关键点</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995553733648.html"/>
    <updated>2020-09-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995553733648</id>
    <content type="html">
iOS问题汇总之iOS应用 - Flutter混合开发关键点

Flutter 要点

Flutter常用依赖
environment:
  sdk: &quot;&amp;gt;=2.1.0 &amp;lt;3.0.0&quot;

dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2...</content>
  </entry>

  <entry>
    <title>iOS问题汇总之iOS应用 - Swift常见问题与技术</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995030718262.html"/>
    <updated>2020-09-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995030718262</id>
    <content type="html">
iOS问题汇总之iOS应用 - Swift常见问题与技术

Swift常见原则与问题
常见问题
参考：https://swifter.tips/

map与flatmap的区别：map不能将元素映射成可选类型,flatmap可以；

map、filter、reduce 的作用
map: 映射,将一个元素根据某个函数 映射 成另一个元素（可以是同类型，也可以是不同类型）
filter: 过滤,将一个元素传入闭包中，如果返回的是false ， 就过滤掉
reduce : reduce函数接收两个参数，一个初始值和一个组合闭包(combine closure)，期间通过一个累加器（Accum...</content>
  </entry>

  <entry>
    <title>把多张图片快速合并成一个pdf文件</title>
    <link href="https://luowei.github.io/shell/15995586002980.html"/>
    <updated>2020-09-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/shell/15995586002980</id>
    <content type="html">
把多张图片快速合并成一个pdf文件

img2pdf方案

安装img2pdf,参考：https://gitlab.mister-muffin.de/josch/img2pdf；
建意把源码下下来，在源码目录下直接使用pip3 install .安装，安装好后使用以下命令即可把多张图片转成一个pdf。
img2pdf *.png *.jpg -o out.pdf


使用万能的 imagemagick
使用brew安装好 imagemagick
brew install imagemagick


如果安装失败，使用sudo chown -R $(whoami) $(brew --pr...</content>
  </entry>

  <entry>
    <title>iOS问题汇总之iOS应用 - Web Hybrid混合页面开发关键点</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995026070817.html"/>
    <updated>2020-09-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15995026070817</id>
    <content type="html">
iOS问题汇总之iOS应用 - Web Hybrid混合页面开发关键点

Web Hybrid关键点

HybridWeb混合页面
视图结构
safeAreaView(UIView)
    |——searchBar(UIView)
    |——scrollView(UIScrollView)
        |——contentView(UIView)
            |——bannerView(UIView)
            |——mainWebView(WKWebView)


需要根据document.body.offsetHeight动态更新WebView的...</content>
  </entry>

  <entry>
    <title>iOS问题汇总之iOS应用 - 浏览器及WKWebView关键点</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15994965110931.html"/>
    <updated>2020-09-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15994965110931</id>
    <content type="html">
iOS问题汇总之iOS应用 - 浏览器及WKWebView关键点

WKWebView

关键代码
self.wkWebView.allowsBackForwardNavigationGestures = YES;
[self.wkWebView addObserver:self forKeyPath:@&quot;estimatedProgress&quot; options:NSKeyValueObservingOptionNew context:nil];
[self.wkWebView addObserver:self forKeyPath:@&quot;title&quot; options:NSKeyValueO...</content>
  </entry>

  <entry>
    <title>驾考科目三灯光表(附长沙市天心大托考场线路图)</title>
    <link href="https://luowei.github.io/%E9%A9%BE%E8%80%83/15975082384466.html"/>
    <updated>2020-08-16T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%A9%BE%E8%80%83/15975082384466</id>
    <content type="html">
驾考科目三灯光表(附长沙市天心大托考场线路图)



​注：考场线路图仅供参考，考试以现场实际线路为准​。

以下是C2自动挡考试灯光​表： 


以下是C1手动挡考试灯光表： 


附：长沙市天心大托考场线路图 

</content>
  </entry>

  <entry>
    <title>macOS的say命令使用详解</title>
    <link href="https://luowei.github.io/macos/15974170272446.html"/>
    <updated>2020-08-14T00:00:00+08:00</updated>
    <id>https://luowei.github.io/macos/15974170272446</id>
    <content type="html">
macOS的say命令使用详解

voice列表
(base) ➜  ~ say -v '?'      
Alex                en_US    # Most people recognize me by my voice.
Alice               it_IT    # Salve, mi chiamo Alice e sono una voce italiana.
Alva                sv_SE    # Hej, jag heter Alva. Jag är en svensk röst.
Amelie            ...</content>
  </entry>

  <entry>
    <title>黄道二十八星宿</title>
    <link href="https://luowei.github.io/%E6%97%A5%E5%8E%86/15972586588326.html"/>
    <updated>2020-08-13T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E6%97%A5%E5%8E%86/15972586588326</id>
    <content type="html">
黄道二十八星宿

二十八宿
二十八宿，是黄道附近二十八组星象的总称。上古时代人们根据日月星辰的运行轨迹和位置，把黄道附近的星象划分为二十八组，俗称“二十八宿”。古人选择黄道赤道附近的二十八个组星象作为坐标，以此作为观测天象参照物。因为它们环列在日、月、五星的四方，很像日、月、五星栖宿的场所，所以称作“宿”。二十八宿分为东南西北四方各分为七宿，即为“四象”：东方苍龙，南方朱雀，西方白虎，北方玄武。二十八宿是中国古代天文学家的重要创作。



东方青龙：龙是东方的七宿——角、亢、氐、房、心、尾、箕，而这七宿的形状又极似龙形，从他们的字义上就可以看出来，角是龙的角，亢是颈项，氐是本，而是颈根...</content>
  </entry>

  <entry>
    <title>建除十二神</title>
    <link href="https://luowei.github.io/%E6%97%A5%E5%8E%86/15972585387473.html"/>
    <updated>2020-08-13T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E6%97%A5%E5%8E%86/15972585387473</id>
    <content type="html">
建除十二神



建除十二神，中国民俗信仰中的十二位神明，分别为建、除、满、平、定、执、破、危、成、收、开、闭。这十二位神明每日轮值，周而复始，负责保护凡间人民的平安。在传统农民历中，二十八宿下，通常会依序在每日标注上今日轮值神名，作为择日吉凶的参考，称为十二建除日。

择日参考
建日
健旺之气。行军、外出、求财、谒贵、上书都是好日子，如寄履历表求职，或到上司家拜访，找亲朋好友周转一下，选此建日即对了。建日为该月最吉祥的日子。本日不可动土、开仓。
除日
为除旧布新之象。除服、疗病、避邪、出行、嫁娶都是好日子，如有久病想找个日子换医生试试不妨选择除日，效果甚佳。不可求官、上任、开张、搬家...</content>
  </entry>

  <entry>
    <title>二十四节气简表美图</title>
    <link href="https://luowei.github.io/%E5%85%B6%E4%BB%96/15972393395932.html"/>
    <updated>2020-08-12T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%85%B6%E4%BB%96/15972393395932</id>
    <content type="html">
二十四节气简表美图



农历月份通常包含一个节气和一个中气，如惊蛰／春分等等，若某农历月份只有节气而没有中气，历法便会把该月作为上个月的闰月。古代历法以太阳历二十四气配阴历十二月，阴历每月二气：在月初的叫节令，在月中以后的叫中气。如立春为正月节令，雨水为正月中气。


  
    
      月份
      节令(节)
      中气(气)
    
  
  
    
      正月
      立春
      雨水
    
    
      二月
      惊蛰
      春分
    
    
      三月
      清明
      谷雨
  ...</content>
  </entry>

  <entry>
    <title>如何下载AppStore上的ipa文件</title>
    <link href="https://luowei.github.io/ios/15969015206167.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/15969015206167</id>
    <content type="html">
如何下载AppStore上的ipa文件

方法一：

  mac上安装并打开Apple Configurator 2(AC2)；
  在AC2上使用Apple Id登录登录后，连接iOS设备；
  
    在iOS设置视图上右键 -&amp;gt; 添加 -&amp;gt; 应用，并在打开的界面中选择要下载的应用,点添加；

  
  然后会开始下载，下载完成后会弹出对话框、不要急着安装替换或停止，先去文件夹(/Users/luowei/Library/Group\ Containers/K36BKF7T3D.group.com.apple.configurator/Library/Caches/A...</content>
  </entry>

  <entry>
    <title>iOS 越狱知识大全</title>
    <link href="https://luowei.github.io/%E8%B6%8A%E7%8B%B1/15968848422904.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%B6%8A%E7%8B%B1/15968848422904</id>
    <content type="html">
iOS 越狱知识大全

Taig iOS 越狱 QA 大全：https://taig9.com/apps-and-tweaks

Cydia and Sileo 软件源 https://taig9.com/apps-and-tweaks

15个最好的 Cydia 替代者：https://taig9.com/apps-and-tweaks

AppValley 安装：https://taig9.com/apps-and-tweaks

TopStore App：https://taig9.com/apps-and-tweaks
</content>
  </entry>

  <entry>
    <title>APP运营投稿社区</title>
    <link href="https://luowei.github.io/app/15967419148255.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/app/15967419148255</id>
    <content type="html">
APP运营投稿社区

应用社区

小众软件：www.appinn.com

创造者日报：creatorsdaily.com

最美应用：zuimeia.com

少数派：sspai.com

知乎iOS应用推荐话题：www.zhihu.com/topic/19769897/top-answers

APP不释手-优质应用推荐：微信小程序



运营社区(不收软文)

运营喵：https://www.yymiao.cn/

运营派：https://www.yunyingpai.com/
</content>
  </entry>

  <entry>
    <title>Makefile使用指南</title>
    <link href="https://luowei.github.io/shell/15967351089829.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/shell/15967351089829</id>
    <content type="html">
Makefile使用指南







</content>
  </entry>

  <entry>
    <title>iMac一体机配置单</title>
    <link href="https://luowei.github.io/%E5%85%B6%E4%BB%96/15949971307203.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%85%B6%E4%BB%96/15949971307203</id>
    <content type="html">
iMac一体机配置单

电脑配置清单


  
    
      名称
      型号
    
  
  
    
      处理器(CPU)
      英特尔 第四代酷睿 i7-4790 @ 3.60GHz 四核
    
    
      主 板
      英特尔 TH87G-P Series
    
    
      内 存
      8 GB ( 金士顿 DDR3L 1600MHz )
    
    
      硬 盘
      希捷 ST500LM000-1EJ162 ( 500 GB / 10000 转/分 )
    
    
   ...</content>
  </entry>

  <entry>
    <title>离散数学与组合数学考试复习大纲</title>
    <link href="https://luowei.github.io/15928371864265.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/15928371864265</id>
    <content type="html">
离散数学与组合数学考试复习大纲

一、考试大纲

离散数学与组合数学是现代数学的重要分支,是计算机科学的基础理论课程数理逻辑、集合论、图论与代数结构是离散数学的重要组成部分。要求考生对它们的基本概念有较深入的了解,能够系统地掌握命题演算、谓词演算及朴素集合论的经典内容,掌握演绎推理的基本方法。掌握图论的基本定理和应用,熟悉代数系统的基本概念及定理。组合数学部分要求考生掌握各种基本的计数方法,线性常系数递推关系的解法,Burnside引理和Polya定理的应用,容斥原理和鸽巢原理的应用等。

主要内容包括:

(一)命题逻辑的等值演算与推理演算
1.命题逻辑的基本概念、命题逻辑联结词与真...</content>
  </entry>

  <entry>
    <title>有用也常用的Shell小点</title>
    <link href="https://luowei.github.io/15927749381601.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/15927749381601</id>
    <content type="html">
有用也常用的Shell小点


</content>
  </entry>

  <entry>
    <title>面试自我介绍方法</title>
    <link href="https://luowei.github.io/%E5%85%B6%E4%BB%96/15905932382572.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%85%B6%E4%BB%96/15905932382572</id>
    <content type="html">
面试自我介绍方法


  首先介绍自己的姓名、年龄、爱好、工作经历、家庭概况理想与报负；
  自己优点特长的介绍：首先了解自己的特长与优点，便可以开始预备自我介绍的内容∶包括工作模式、优点、技能，突出成就、专业知识、学术背景等。
  身体的语言的表达，适当的加入一些才艺作品展现。
  自我介绍的结束语。


面试如何提问题
从几个角度提问


  哪些事是你最关心重视的，而这些会影响到你对工作的投入、对公司的奉献;
  公司的价值观、文化与发展理念，以及人才理念；


案例：

  我习惯准时上班，所以想了解贵公司的上下班时间?”
  对这项职务的工作内容和期望目标 ？
  公司组织架...</content>
  </entry>

  <entry>
    <title>使用 sqlcipher 加密解密 sqlite3 数据库</title>
    <link href="https://luowei.github.io/sqlite/15905909302229.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/sqlite/15905909302229</id>
    <content type="html">
使用 sqlcipher 加密解密 sqlite3 数据库

下载sqlcipher
https://github.com/sqlcipher/sqlcipher

编译sqlcipher
$ ./configure --enable-tempstore=yes CFLAGS=&quot;-DSQLITE_HAS_CODEC&quot; LDFLAGS=&quot;-lcrypto -L/usr/local/opt/openssl/lib&quot; CPPFLAGS=&quot;-I/usr/local/opt/openssl/include&quot;
$ make


安装sqlcipher

  创建一个sqlcipher新的目录；
 ...</content>
  </entry>

  <entry>
    <title>去腾讯面试iOS的几个基础问题回顾</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/15905890897817.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/15905890897817</id>
    <content type="html">
去腾讯面试iOS的几个基础问题回顾

数组：存储区间是连续的，二分查找时间复杂度小，为O(1)，寻址容易，插入和删除困难；

链表：存储区间离散，时间复杂度很大，达O（N），寻址困难，插入和删除容易；

哈希表：是一种寻址容易，插入删除也容易的数据结构，既满足了数据的查找方便，同时不占用太多的内容空间，使用也十分方便。
Hash表实现原理：使用哈希函数将被查找的Key转换为数组的索引，如果发生hash索引值碰撞冲突，则拉链法(开放定址法)和线性探测法等方法解决冲突，直到找出一个不冲突的哈希地址。

解决hash冲突的常见办法
开放定址法（线性探测再散列，二次探测再散列，伪随机探测再散列...</content>
  </entry>

  <entry>
    <title>《用简单的方式打破坏习惯》英文演讲稿字幕</title>
    <link href="https://luowei.github.io/%E8%8B%B1%E8%AF%AD/15905890897443.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%8B%B1%E8%AF%AD/15905890897443</id>
    <content type="html">
《用简单的方式打破坏习惯》英文演讲稿字幕

A simple way to break a bad habit

00:00
When I was first learning to meditate, the instruction was to simply pay attention to my breath, and when my mind wandered, to bring it back.

00:08
Sounded simple enough. Yet I’d sit on these silent retreats, sweating through T-shir...</content>
  </entry>

  <entry>
    <title>我的几个APP 1.0版本上架的文案及描述</title>
    <link href="https://luowei.github.io/app/15905890897401.html"/>
    <updated>2020-08-09T00:00:00+08:00</updated>
    <id>https://luowei.github.io/app/15905890897401</id>
    <content type="html">
我的几个APP 1.0版本上架的文案及描述

开发者App
https://itunes.apple.com/cn/developer/wei-luo/id990121194

万能输入法
https://itunes.apple.com/cn/app/id1227288468
https://itunes.apple.com/us/app/id1227288468

中文描述
＝＝＝万能输入法宿主App功能介绍＝＝＝
万能输入法宿主App界面简法、动画淡雅；
万能输入法宿主App内置简版Web浏览器支持关键词搜索；
万能输入法宿主App内置软笔画板支持自定义笔触大小及颜色，并笔锋效果...</content>
  </entry>

  <entry>
    <title>SQLite 常用查询语句</title>
    <link href="https://luowei.github.io/%E5%85%B6%E4%BB%96/15945414403299.html"/>
    <updated>2020-08-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%85%B6%E4%BB%96/15945414403299</id>
    <content type="html">
SQLite 常用查询语句

创建表

DROP TABLE IF EXISTS &quot;tb_chizhu&quot;;
CREATE TABLE &quot;tb_chizhu&quot; (
  &quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  &quot;hanZi&quot; text(20),
  &quot;pingYin&quot; text(30),
  &quot;wuBiBianMa&quot; text(5),
  &quot;leiXing&quot; integer(11),
  &quot;wuBiQuanMa&quot; text(5),
  &quot;wuBiBianMa98&quot; text(5),
  &quot;frequency&quot; integer(1...</content>
  </entry>

  <entry>
    <title>添加万能输入法</title>
    <link href="https://luowei.github.io/%E4%B8%87%E8%83%BD%E8%BE%93%E5%85%A5%E6%B3%95/15928631429512.html"/>
    <updated>2020-07-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E4%B8%87%E8%83%BD%E8%BE%93%E5%85%A5%E6%B3%95/15928631429512</id>
    <content type="html">
添加万能输入法


  去AppStore安装好万能输入法后，打开 设置-&amp;gt;通用-&amp;gt;键盘-&amp;gt;键盘-&amp;gt;添加键盘，然后再选择万能输入法即可。



</content>
  </entry>

  <entry>
    <title>FFmpeg常用命令</title>
    <link href="https://luowei.github.io/ffmpeg/15905889001131.html"/>
    <updated>2020-06-22T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ffmpeg/15905889001131</id>
    <content type="html">
FFmpeg常用命令



































































参考：
《FFmpeg Basics》中文版-04-调整和伸缩视频
音视频专辑
ffmpeg缩放视频尺寸
ffprobe,ffplay ffmpeg常用的命令行命令
每天学习一个命令：ffprobe 查看多媒体信息
ffmpeg常用命令
</content>
  </entry>

  <entry>
    <title>最美色卡</title>
    <link href="https://luowei.github.io/%E8%89%B2%E5%8D%A1/15914585021613.html"/>
    <updated>2020-06-21T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%89%B2%E5%8D%A1/15914585021613</id>
    <content type="html">
最美色卡




















































^_^,谢谢支持！
</content>
  </entry>

  <entry>
    <title>生成iOS App Preview的几种方案</title>
    <link href="https://luowei.github.io/ios/make-ios-app-preview.html"/>
    <updated>2020-05-26T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/make-ios-app-preview</id>
    <content type="html">
生成iOS App Preview的几种方案

参考：Capture iOS Simulator video for App Preview


xcode自带的command tools

For Xcode 8.2 or later

  You can take videos and screenshots of Simulator using the xcrun Xcode command-line utility.



  Run your app on the simulator.
  Open Terminal.app
  Run the command
    
  ...</content>
  </entry>

  <entry>
    <title>macOS下生成icns图标命令</title>
    <link href="https://luowei.github.io/linux/macOS-icns-command.html"/>
    <updated>2020-05-18T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/macOS-icns-command</id>
    <content type="html">
macOS下生成icns图标命令

mkdir me.iconset
sips -z 16 16     icon1024.png --out me.iconset/icon_16x16.png
sips -z 32 32     icon1024.png --out me.iconset/icon_16x16@2x.png
sips -z 32 32     icon1024.png --out me.iconset/icon_32x32.png
sips -z 64 64     icon1024.png --out me.iconset/icon_32x32@2x.png
sip...</content>
  </entry>

  <entry>
    <title>终端代理命令</title>
    <link href="https://luowei.github.io/linux/terminal-proxy-command.html"/>
    <updated>2020-05-17T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/terminal-proxy-command</id>
    <content type="html">
常用终端命令

ClashX终端代理命令
export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7891

Shadow2Ray终端代理命令
export https_proxy=http://127.0.0.1:1087 http_proxy=http://127.0.0.1:1087 all_proxy=socks5://127.0.0.1:1080
</content>
  </entry>

  <entry>
    <title>FFMPeg常用转码命令</title>
    <link href="https://luowei.github.io/ffmpeg/ffmpeg-useful-command.html"/>
    <updated>2020-05-10T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ffmpeg/ffmpeg-useful-command</id>
    <content type="html">
FFMPeg常用转码命令

设置变量
filename=xxx.mov

导出元数据文件
ffmpeg -i “$filename” -y -c copy -map_metadata 0 -map_metadata:s:v 0:s:v -map_metadata:s:a 0:s:a -f ffmetadata “${filename}.metadata”

转换成mp4
ffmpeg -i “$filename” -y -f ffmetadata -i “${filename}.metadata” -map_metadata 1 -vcodec libx264 -preset fast...</content>
  </entry>

  <entry>
    <title>东革阿里的食用方法以及主要功效</title>
    <link href="https://luowei.github.io/life/tongkat-ali-function.html"/>
    <updated>2019-11-28T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/tongkat-ali-function</id>
    <content type="html">


东革阿里（Tongkat Ali）是生长在东南亚靠近赤道的原始热带雨林中，生长在潮湿砂质土壤里的一种野生乔木植物，成熟期为 5 年以上。其树高4-6米，树干直径8-10厘米，最粗可达15厘米。树枝几乎没有分叉，树叶长在顶部呈伞状。其根亦不分叉，入地最深可达 2 米，东革阿里的根部有多种功效。东革阿里全株均可入药,但药用部分主要来源于根部,在东南亚民间作为传统药材和滋补品已有数百年历史, 既可作单味药、也可作药方中的重要配药。东革阿里有红、黄、黑三种颜色之分，其中红东革阿里最为珍稀，其产量最少，药用价值也是最高，味道甘甜，带有淡淡的人参味道。其次是黑东，味道甘醇，在烹煮之前闻起来会有...</content>
  </entry>

  <entry>
    <title>广告配置脚本及分析配置脚本</title>
    <link href="https://luowei.github.io/seo/website-ad-analytics-config.html"/>
    <updated>2019-05-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/seo/website-ad-analytics-config</id>
    <content type="html">
网站SEO优化常用的方法与技巧

Adsense

自动广告
&amp;lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: &quot;ca-pub-8760692904992206&quot;,
          enable_page_level_ads: true
     ...</content>
  </entry>

  <entry>
    <title>网站SEO优化常用的方法与技巧</title>
    <link href="https://luowei.github.io/seo/website-seo.html"/>
    <updated>2019-04-30T00:00:00+08:00</updated>
    <id>https://luowei.github.io/seo/website-seo</id>
    <content type="html">
网站SEO优化常用的方法与技巧

Google
Google SearchConsole
https://search.google.com/search-console
Google Adsense
https://www.google.com/adsense
Google Analytics
https://analytics.google.com

Bing
Bing Search
https://www.bing.com/webmaster/configure

百度
百度站点管理
https://ziyuan.baidu.com/site/index
百度链接收录
https...</content>
  </entry>

  <entry>
    <title>Github Pages 之 Jekyll 与 Liquid 模板的应用</title>
    <link href="https://luowei.github.io/jekyll/github-pages-jekyll-liquid.html"/>
    <updated>2019-01-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/jekyll/github-pages-jekyll-liquid</id>
    <content type="html">
Github Pages 之 Jekyll 与 Liquid 模板的应用

参考文章

不使用套件直接產生 Jekyll 的 sitemap.xml

安全且面向用户定制的WebApp模板语言

Jekyll Tags on Github Pages

Jekyll Liquid Filters

参考代码


&amp;lt;p id=&quot;items&quot;&amp;gt;
    &amp;lt;ul class=&quot;posts&quot;&amp;gt;
        {% assign list = site.pages | reverse %}
        {% for page in list %}
        {...</content>
  </entry>

  <entry>
    <title>绝妙的声音</title>
    <link href="https://luowei.github.io/audio/wonderful-audio.html"/>
    <updated>2019-01-26T00:00:00+08:00</updated>
    <id>https://luowei.github.io/audio/wonderful-audio</id>
    <content type="html">
绝妙的音乐播放

music

精彩的英文演讲

TED英文演讲

国学

抖音热曲

</content>
  </entry>

  <entry>
    <title>常用的sql命令</title>
    <link href="https://luowei.github.io/%E5%B7%A5%E5%85%B7/useful-sql-command.html"/>
    <updated>2019-01-25T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%B7%A5%E5%85%B7/useful-sql-command</id>
    <content type="html">
MySQL命令
替数据表中某个字段中的部份内容
UPDATE `topic`
SET `preImage` = REPLACE (`preImage`, '7xstyo.com2.z0.glb.clouddn.com', 'wdyzj.wodedata.com')
WHERE id IN (
  select id from (
      SELECT id FROM `topic` WHERE `preImage` LIKE '%7xstyo.com2.z0.glb.clouddn.com%' 
  ) tempC
)


</content>
  </entry>

  <entry>
    <title>技术研究课题参考点</title>
    <link href="https://luowei.github.io/%E8%AF%BE%E9%A2%98/technology-research-topic.html"/>
    <updated>2018-09-16T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E8%AF%BE%E9%A2%98/technology-research-topic</id>
    <content type="html">
技术研究课题参考点

在线视频及图片处理方案
该方案基于Nginx的RTMP模块与FFMpeg结全的视频编解码处理，以及与ImageMagick结合的图片处理系统。

普通PC上视视频录制直播的方案
该方案是利用OpenBroadcaster、XSplit视频录制直播工具及 Auto-Duck in Real Time 实现声音闪避效果。

流行的音视频App的音视频资源文件抓取方案
在越狱的机器上，喜玛拉雅FM、蜻蜓FM、抖音、火山小视频App等可通过iMazing导出音视频文件和sqlite数据库文件件，再通过简单的python脚本处理抓取到的资源文件与外链。

浏览器内的广告拦截...</content>
  </entry>

  <entry>
    <title>常用的软件工具</title>
    <link href="https://luowei.github.io/%E5%B7%A5%E5%85%B7/useful-recommand-tools.html"/>
    <updated>2018-08-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E5%B7%A5%E5%85%B7/useful-recommand-tools</id>
    <content type="html">
Mathematica : http://www.wolfram.com/mathematica/

Gephi : https://gephi.org/

NetLogo : http://ccl.northwestern.edu/netlogo/

</content>
  </entry>

  <entry>
    <title>工作生活中常碰到的问题的总结与思考</title>
    <link href="https://luowei.github.io/life/work-sumary.html"/>
    <updated>2018-07-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/work-sumary</id>
    <content type="html">
每个人在工作与生活中难免都会碰到各种各样的烦恼，这里来总结一下我在工作生活中碰到的问题作一下思考和分析。

1. 问题：执行人负责人不明确的问题。
解决方案：安排事情或任务时，事情本身和事情执行人的安排要具体明确；

事情本身不明确导致：做错返工，影响工期，造成人力浪费…
执行人不明确导致：各种相互推卸责任的事发生，造成团队不和谐。可能出现做的人若是做的做好，则功劳可能是别人或大家的，要是做不好，则做事的人就背锅，反而不做事的人轻巧了。

例如：如果有领导把一个项目同时分配给两个或多个团队去实行，如果没有具体指明主负责人或实际推动人，那么这个项目也就很难有所进展。

2. 问题：任务拆...</content>
  </entry>

  <entry>
    <title>常用的终端命令</title>
    <link href="https://luowei.github.io/linux/general-command.html"/>
    <updated>2018-07-10T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/general-command</id>
    <content type="html">
常用的终端命令

文件重命名

批量改文件： for i in *; do mv $i $i.mp3; done;
去掉多余的mp3后缀： for i in *; do mv $i ${i/.mp3.mp3/.mp3}; done;
*文件名全改成小写: for i in *; do mv $i ` echo &quot;print '$i'.lower()&quot; | python `; done; 
或   for i in *; do mv $i ` echo &quot;print '$i'.downcase()&quot; | ruby `; done;
或   for i in *; do mv $i ` p...</content>
  </entry>

  <entry>
    <title>常用的特殊符号</title>
    <link href="https://luowei.github.io/linux/math-symbols.html"/>
    <updated>2018-06-24T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/math-symbols</id>
    <content type="html">
常用的特殊符号

常用的数学符号
＋－×÷﹢﹣±／＝≈≡≠∧∨∑∏∪∩∈⊙⌒⊥∥∠∽≌＜＞≤≥≮≯∧∨√﹙﹚[]﹛﹜∫∮∝∞⊙∏º¹²³⁴ⁿ₁₂₃₄·∶½⅓⅔¼¾⅛⅜⅝⅞∴∵∷αβγδεζηθικλμνξοπρστυφχψω％‰℅°℃℉′″￠〒¤○㎎㎏㎜㎝㎞㎡㎥㏄㏎mlmol㏕Pa＄￡￥㏒㏑壹贰叁肆伍陆柒捌玖拾微毫厘分百千万亿兆吉

＋ ± － × ‧÷ ±  ＝ ≠ ≒ ≡   ≦ ≧
≌ ∞ ∝   Σ  π ㎡  ％  ℃ ℉  √
∴ ∵ ∈ ∉∩ ∪ ⊂ ⊆ ∅   ㏒   ㏑
⊥ ∠  ° △  □  ⊙∫ ∮∂ ∇
¼ , ½ , ¾ , ⅓ , ⅔ ,⅛, ⅜,⅝, ⅞...</content>
  </entry>

  <entry>
    <title>ssh隧道实现代理上网</title>
    <link href="https://luowei.github.io/linux/ssh-tunnel.html"/>
    <updated>2018-06-07T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/ssh-tunnel</id>
    <content type="html">
ssh隧道实现代理上网

本地代理

ssh -N -D 127.0.0.1:端口 用户名@服务器

比如：
ssh -N -D 127.0.0.1:3128 admin@xxxxxx.com

chrome配置



Terminer设置代理
参考： https://gist.github.com/fearblackcat/850c6e027d5a03017c44daaa6a7ffc30 

export http_proxy=&quot;username:password@ip address:port number&quot;  to your ~/.bash_profile file

expor...</content>
  </entry>

  <entry>
    <title>做独立开发的一些感想</title>
    <link href="https://luowei.github.io/ios/Indie-Developer-Thoughts.html"/>
    <updated>2018-02-07T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/Indie-Developer-Thoughts</id>
    <content type="html">
做独立开发的一些感想

  想想自己独立开发也有好多年了，从刚毕业做的在线销售系统，再到spring boot做写的my-finances，再后来转iOS做的万能输入法、我的浏览器、照片DIY、斗图王。一路走来，还是写一点感想吧，后面有时间会持续更新的。

  要说起做独立开发，要从我刚学会编程时，我想那时候就应该有这种想法了，总想着除了正常的学习或工作之外，要自己独立做点什么东西，以突显出我与别人的不一样，我需要比别人更坚韧不拔，更能吃苦耐劳。

  其实作为独立开发者，最难的是需要孤独的去面对问题和挑战困难，因为没人与你同行，而且也可能会要没日没夜的加班加点，有可能是1年，也有可能...</content>
  </entry>

  <entry>
    <title>开发者个人App作品展示</title>
    <link href="https://luowei.github.io/ios/developer-app.html"/>
    <updated>2018-02-06T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/developer-app</id>
    <content type="html">
开发者App下载

开发者App
https://itunes.apple.com/cn/developer/wei-luo/id990121194

万能输入法
https://itunes.apple.com/cn/app/id1227288468
https://itunes.apple.com/us/app/id1227288468

中文描述
＝＝＝万能输入法宿主App功能介绍＝＝＝
万能输入法宿主App界面简法、动画淡雅；
万能输入法宿主App内置简版Web浏览器支持关键词搜索；
万能输入法宿主App内置软笔画板支持自定义笔触大小及颜色，并笔锋效果；
万能输入法宿主App内...</content>
  </entry>

  <entry>
    <title>UTI详解</title>
    <link href="https://luowei.github.io/ios/UTI-type.html"/>
    <updated>2018-01-26T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/UTI-type</id>
    <content type="html">
UTI Overview

参考：

Fun with UTI

Apple UTI Overview



mdls

You can use the mdls tool to inspect the UTIs currently attached to any item in your file system. This is also quite useful to see if your UTI definitions for your custom type are correct.

LuoWeideMacBook-Pro:Movies luowei$ mdls MyInp...</content>
  </entry>

  <entry>
    <title>Mime Type 列表全集</title>
    <link href="https://luowei.github.io/tutorials/mime-type-list.html"/>
    <updated>2018-01-25T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tutorials/mime-type-list</id>
    <content type="html">
MIME Types List


  
    
      Suffixes applicable
      Media type and subtype(s)
    
  
  
    
      .3dm
      x-world/x-3dmf
    
    
      .3dmf
      x-world/x-3dmf
    
    
      .a
      application/octet-stream
    
    
      .aab
      application/x-authorware-bin
    
    
     ...</content>
  </entry>

  <entry>
    <title>手机连接Mac共享的WiFi的hosts配置问题</title>
    <link href="https://luowei.github.io/ios/mac-share-wifi-host-config.html"/>
    <updated>2017-08-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/mac-share-wifi-host-config</id>
    <content type="html">
手机连接Mac共享的WiFi的hosts配置问题

安装Homebrew


  Get Xcode;
  Get Command Line Tools. xcode-select --install;
  Install Homebrew. ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;;
  其他辅助命令:



  check install issue : brew doctor;

  To search for an application:b...</content>
  </entry>

  <entry>
    <title>在阿里云ECS上使用Docker快速搭建Gitlab</title>
    <link href="https://luowei.github.io/docker/docker-gitlab-config.html"/>
    <updated>2017-07-12T00:00:00+08:00</updated>
    <id>https://luowei.github.io/docker/docker-gitlab-config</id>
    <content type="html">
在阿里云ECS上使用Docker快速搭建Gitlab

安装Docker

安装命令：
apt-get install docker.io

检查版本：
docker -v

添加Docker加速器

可以自己配置加速器：https://dashboard.daocloud.io/mirror

或者使用阿里去的加速器，登录阿里云，进入容器Hub服务控制台,初始化加速器后，阿里云会为我们创建一个专属加速器地址，复制这个地址。

在/etc/docker/daemon.json中添加一段配置，如果没有该文件则创建。

{
    &quot;registry-mirrors&quot;: [&quot;&amp;lt;you...</content>
  </entry>

  <entry>
    <title>macOS下Tomcat项目的布署及8080端口转发</title>
    <link href="https://luowei.github.io/lamp/tomcat-deploy-and-port-proxy.html"/>
    <updated>2017-06-12T00:00:00+08:00</updated>
    <id>https://luowei.github.io/lamp/tomcat-deploy-and-port-proxy</id>
    <content type="html">
macOS下Java Web项目的布署及8080端口转发的配置

下载安装JDK 与 Tomcat

下载JDK8: http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html

下载Tomcat8: http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.15/bin/apache-tomcat-8.5.15.zip

配置 JAVA_HOME 与 Tomcat


  编辑：vi ~/.bash_profile
  添加以下命...</content>
  </entry>

  <entry>
    <title>万能输入法实现原理及代码结构</title>
    <link href="https://luowei.github.io/life/myinputmethod-structure.html"/>
    <updated>2017-05-28T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/myinputmethod-structure</id>
    <content type="html">
万能输入法实现原理及代码结构



</content>
  </entry>

  <entry>
    <title>为iOS App子模块创建桌面快捷方式</title>
    <link href="https://luowei.github.io/ios/iOS-config-webclip.html"/>
    <updated>2017-05-19T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/iOS-config-webclip</id>
    <content type="html">
为iOS App 子模块创建桌面快捷方式


  前提是App配置了自己的URLSchem,并且通过url可以打开App的相应的子模块；
  安装Apple Configurator,选择”文件-&amp;gt;新建描述文件”；
  
    填写描述文件通用信息，和添加一个Webclip并配置好相应的信息；


  
  然后将描述文件存储到磁盘，我这里文件名为：Drawboard_Webclip_sign;
  再给这个iOS 的 mobileconfig文件进行签名，命令如下，其中双引号中的为钥匙串里证书的常用名称；
/usr/bin/security cms -S -N &quot;iPhone...</content>
  </entry>

  <entry>
    <title>使用 sqlcipher 加密解密 sqlite3 数据库</title>
    <link href="https://luowei.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/sqlite-encrypt-with-sqlcipher.html"/>
    <updated>2017-04-25T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/sqlite-encrypt-with-sqlcipher</id>
    <content type="html">
使用 sqlcipher 加密解密 sqlite3 数据库

下载sqlcipher
https://github.com/sqlcipher/sqlcipher

编译sqlcipher
$ ./configure --enable-tempstore=yes CFLAGS=&quot;-DSQLITE_HAS_CODEC&quot; LDFLAGS=&quot;-lcrypto -L/usr/local/opt/openssl/lib&quot; CPPFLAGS=&quot;-I/usr/local/opt/openssl/include&quot;
$ make


安装sqlcipher

  创建一个sqlcipher新的目录；
 ...</content>
  </entry>

  <entry>
    <title>机器学习/数据挖掘/神经网络相关资料</title>
    <link href="https://luowei.github.io/ai/machine-learning-data-mining-neural-network.html"/>
    <updated>2017-03-18T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ai/machine-learning-data-mining-neural network</id>
    <content type="html">
机器学习/数据挖掘/神经网络相关资料

##学习入口链接

解读AlphaGo论文

 机器学习系列(8)_读《Nature》论文，看AlphaGo养成

龙心尘的CSDN博客

寒小阳的CSDN博客

用Python开始机器学习（1：配置windows平台）

Feng某人迟到的技术专栏

AlphaGo论文的译文，用深度神经网络和树搜索征服围棋：Mastering the game of Go with deep neural networks and tree search

持续更新中。。。

</content>
  </entry>

  <entry>
    <title>正则表达式所有元字符及其使用方法一览表</title>
    <link href="https://luowei.github.io/regex/regex-tutorial.html"/>
    <updated>2017-02-24T00:00:00+08:00</updated>
    <id>https://luowei.github.io/regex/regex-tutorial</id>
    <content type="html">
正则表达式所有元字符及其使用方法一览表

参考：

正则表达式所有元字符及其使用方法一览表

正则表达式30分钟入门教程

在线正则表达式测试

9 Regular Expressions to strip HTML tags

7 URL regular expressions to retrieve all parts of URL

Mark一下方便日常使用查询

元字符列表


  
    
      字符
      描述
    
  
  
    
      \
      将下一个字符标记为一个特殊字符、或一个原义字符、或一个 后向引用、或一个八进制转义符。例如...</content>
  </entry>

  <entry>
    <title>CallKit使用实现总结</title>
    <link href="https://luowei.github.io/ios/ios-callkit-guide.html"/>
    <updated>2017-01-14T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-callkit-guide</id>
    <content type="html">
CallKit使用实现总结

CallKit不仅让VoIP应用具有系统电话一样的功能，还能帮助系统实现来电识别等功能；但本身并不具备voip功能。


  
    引入库PushKit.framework、CallKit.framework；
  
  
    AppDelegate.h添加
  


#import &amp;lt;PushKit/PushKit.h&amp;gt;

@class ProviderDelegate;
@class SpeakerboxCallManager;

@property (nonatomic, strong) ProviderDelegate *pro...</content>
  </entry>

  <entry>
    <title>使用自建证书配置HTTPS服务器</title>
    <link href="https://luowei.github.io/lamp/https-config.html"/>
    <updated>2016-12-24T00:00:00+08:00</updated>
    <id>https://luowei.github.io/lamp/https-config</id>
    <content type="html">
使用自建证书配置HTTPS服务器

安装升级openssl


  
    首先，查看下当前设备的openssl版本，如果版本在openssl1.0.1g以上，请略过。查看命令：openssl version -a。
  
  
    下载：wget https://www.openssl.org/source/openssl-1.0.2j.tar.gz。
  
  
    下载完之后，解压并进行安装：
  


tar -zxvf openssl-1.0.2j.tar.gz
cd  openssl-1.0.1g         
./config shared zlib    ...</content>
  </entry>

  <entry>
    <title>iOS安防及越狱开发相关知识总结</title>
    <link href="https://luowei.github.io/ios/ios-security-reverse-jailbreak-skills-summary.html"/>
    <updated>2016-10-21T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-security-reverse-jailbreak-skills-summary</id>
    <content type="html">
iOS安防及越狱开发相关知识总结

首先要有一个越狱设备，没得说的。

脱壳
因为从AppStore下载的ipa都是加了壳的(苹果把开发者上传的ipa进行了加壳后财放到AppStore的)，所以加壳的ipa要先去壳。因为通过xcode打的包是没有加壳的，所以在第三方渠道如PP助手、itools等应用市场有很多ipa是开发者直接分发没有加壳的。

脱壳可以用clutch、dumpdecrypted或者使用gdb調試等解密去壳

Clutch脱壳破解：iOS逆向之ipa破解

iOS逆向之App脱壳:http://www.jianshu.com/p/47836c78eb0a

App脱壳及...</content>
  </entry>

  <entry>
    <title>iOS中图形的绘制基础</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-graphic-draw.html"/>
    <updated>2016-09-10T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-graphic-draw</id>
    <content type="html">
iOS中图形的绘制基础

UIView的drawRect方法
override func drawRect(rect: CGRect) {
        //绘制代码
}


Bézier Curve（贝赛尔曲线）

1.1962年法国工程师Pierre Bézier发表;
2.计算机图形图像造形基本工具,运用最多的基本线条之一;



画一根线段
let linePath = UIBezierPath()
linePath.move(to: CGPoint(x: 30, y: 50))
linePath.addLine(to: CGPoint(x: 190, y: 50))
UIC...</content>
  </entry>

  <entry>
    <title>iOS面试相关基础问题点</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-basic-interview-question.html"/>
    <updated>2016-08-23T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-basic-interview-question</id>
    <content type="html">
iOS面试相关基础问题点

iOS程序的执行顺序


  AppDelegate执行顺序


1 进入程序的入口，进入main函数, 设置AppDelegate称为函数的代理
2  程序完成加载：-[AppDelegate application:didFinishLaunchingWithOptions:]
3 创建window窗口
4 程序被激活：-[AppDelegate applicationDidBecomeActive:]
5 当点击command+H时：
    程序取消激活状态：-[AppDelegate applicationWillResignActive:]
  ...</content>
  </entry>

  <entry>
    <title>C/S系统通信相关解决方案</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/client-server-communication-solution.html"/>
    <updated>2016-06-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/client-server-communication-solution</id>
    <content type="html">
C/S系统通信相关解决方案

即时消息IM


  
    目前主流的四种IM（IM：instant messaging,即时消息）协议：XMPP（Extensible Messageing and Presence Protocol：可扩展消息与表示协议）、即时信息和空间协议(IMPP)、空间和即时信息协议(PRIM)、针对即时通讯和空间平衡扩充的进程开始协议SIP(SIMPLE)。在这四种协议中，XMPP是最灵活的。XMPP是一种基于XML的协议，它继承了在XML环境中灵活的发展性。
  
  XMPP官网：https://xmpp.org
    
      客户端：http...</content>
  </entry>

  <entry>
    <title>JsonServer,lowdb,hotel为开发者打造轻服务器</title>
    <link href="https://luowei.github.io/linux/JsonServer-lowdb-hotel-for-mock-api-server.html"/>
    <updated>2016-06-27T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/JsonServer-lowdb-hotel-for-mock-api-server</id>
    <content type="html">
JsonServer,lowdb,hotel为开发者打造轻服务器

JsonServer模拟Api服务端

JsonServer:https://github.com/typicode/json-server

本文示例：http://wodedata.com:3000

为api生成模拟数据



js写的轻量级数据库lowdb

lowdb:https://github.com/typicode/lowdb

hotel一个非常好用的Server管理器

hotel:https://github.com/typicode/hotel

安装全局作用域的module

添加json-...</content>
  </entry>

  <entry>
    <title>NSURLConnection 与 NSURLSession 区别</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-nsurlconnection-and-nsurlsession.html"/>
    <updated>2016-06-20T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-nsurlconnection-and-nsurlsession</id>
    <content type="html">
NSURLConnection 与 NSURLSession 区别

NSURLSession 官方说法


  NSURLSession 是iOS7后出来的替代 NSURLConnection 的API;
  NSURLSession 通过绑定一个 delegate 在一个网络会话的生命周期里调用某些事件；
  NSURLSession 对象是线程安全的；
  NSURLSession 默认使用系统提供的delegate，并适当的使用现有的代码使用；
  NSURLSession 通过创建 NSURLSessionTask 代表资源被加载的任务，类似 NSURLConnection对...</content>
  </entry>

  <entry>
    <title>常见的基础原理相关的面试问题</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-base-principle-qa.html"/>
    <updated>2016-06-19T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-base-principle-qa</id>
    <content type="html">
常见的基础原理相关的问题

数组：
数组存储区间是连续的，二分查找时间复杂度小，为O(1)，寻址容易，插入和删除困难；

链表：
链表存储区间离散，时间复杂度很大，达O（N），寻址困难，插入和删除容易；

哈希表：
哈希表是一种寻址容易，插入删除也容易的数据结构，既满足了数据的查找方便，同时不占用太多的内容空间，使用也十分方便。
Hash表实现原理：使用哈希函数将被查找的Key转换为数组的索引，如果发生hash索引值碰撞冲突，则拉链法(开放定址法)和线性探测法等方法解决冲突，直到找出一个不冲突的哈希地址。

解决hash冲突的常见办法
开放定址法（线性探测再散列，二次探测再散列，伪随机...</content>
  </entry>

  <entry>
    <title>iOS 中 UIView 的 Layout 相关概念</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-view-layout-circle.html"/>
    <updated>2016-06-18T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-view-layout-circle</id>
    <content type="html">
iOS 中 UIView 的 Layout 相关概念

Autolayout机制相关方法


  - (CGSize)sizeThatFits:(CGSize)size
  - (void)sizeToFit
  - (void)layoutSubviews
  - (void)layoutIfNeeded
  - (void)setNeedsLayout
  - (void)setNeedsDisplay
  - (void)drawRect


layoutSubviews在以下情况下会被调用：


  init初始化不会触发layoutSubviews,但是是用initWithF...</content>
  </entry>

  <entry>
    <title>OC中的运行时及Swift中的结构体及值类型</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-referencetype-swift-struct-difference.html"/>
    <updated>2016-06-17T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-referencetype-swift-struct-difference</id>
    <content type="html">
OC中的运行时及Swift中的结构体及值类型

OC中的运行时


  
    OC本身是一种强类型语言，但其运行时功能让它又有了动态语言的特点。OC中对象的类型和对象所执行的方法都是在运行时阶段进行查找并确认的，这种机制被称为动态绑定。
  
  
    在很多语言，比如 C ，调用一个方法其实就是跳到内存中的某一点并开始执行一段代码。没有任何动态的特性，因为这在编译时就决定好了。而在 Objective-C 中，[object foo] 语法并不会立即执行 foo 这个方法的代码。它是在运行时给 object 发送一条叫 foo 的消息。这个消息，也许会由 object 来处理...</content>
  </entry>

  <entry>
    <title>iOS中的MVC、MVVM 研究</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-mvc-mvvm-research.html"/>
    <updated>2016-06-17T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-mvc-mvvm-research</id>
    <content type="html">
iOS中的MVC、MVVM 研究

一个标准的MVC架构


  
    Model

     @interface Person : NSObject
       
 - (instancetype)initwithSalutation:(NSString *)salutation firstName:(NSString *)firstName lastName:(NSString *)lastName birthdate:(NSDate *)birthdate;
       
 @property (nonatomic, readonly) NSString *saluta...</content>
  </entry>

  <entry>
    <title>iOS性能内存优化</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-perfermance-optimization.html"/>
    <updated>2015-12-13T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/ios-perfermance-optimization</id>
    <content type="html">
iOS性能内存优化

几个优化总体思路：

  避免过多的CPU计算
    
      简化复杂频繁的布局计算
      文本计算、格式转换、图像绘制、对象的创建调整等尽可能放到后台线程进行
    
  
  避免图层混合
    
      确保控件的opaque属性设置为true，确保backgroundColor和父视图颜色一致且不透明
      如无特殊需要，不要设置低于1的alpha值
      确保UIImage没有alpha通道
    
  
  避免临时转换
    
      确保图片大小和frame一致，不要在滑动时缩放图片
      确保图片颜...</content>
  </entry>

  <entry>
    <title>WebView、网络操作相关及键盘相关的几个关键类</title>
    <link href="https://luowei.github.io/ios/ios-webview-custom-urlprotocol-keyboard.html"/>
    <updated>2015-10-24T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-webview-custom-urlprotocol-keyboard</id>
    <content type="html">
WebView、网络操作相关及键盘相关的几个关键类

UIWebview的本地调用

  注入js:[webview stringByEvaluatingJavaScriptFromString:]
  本地调用，使用WebViewJavascriptBridge：- (void)registerHandler:(NSString *)handlerName handler:(WVJBHandler)handler


WKWebView的本地调用

  注入js:[wkwebview evaluateJavaScript:]
  首先通过WKUserContentController...</content>
  </entry>

  <entry>
    <title>iOS内存管理机制</title>
    <link href="https://luowei.github.io/ios/ios-memery-management.html"/>
    <updated>2015-10-19T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-memery-management</id>
    <content type="html">
iOS内存管理机制

Objective-C内存管理的对象

  主要有两类，一类是值类型，比如int、float、struct等基本数据类型；
  另一类是引用类型，也就是继承自NSObject类的所有的OC对象；
  前一种值类型不需要我们管理，后一种引用类型是需要我们管理内存的；
  值类型会被放入栈中，他们依次紧密排列，在内存中占有一块连续的内存空间，遵循先进后出的原则；
  引用类型会被放到堆中，当给对象分配内存空间时，会随机的从内存当中开辟空间，对象与对象之间可能会留有不确定大小的空白空间，因此会产生很多内存碎片，需要我们管理；
  栈内存与堆内存从性能上比较，栈内存要优于...</content>
  </entry>

  <entry>
    <title>Tomcat多域名绑定及集群配置</title>
    <link href="https://luowei.github.io/tomcat%E9%85%8D%E7%BD%AE/tomcat-multiple-domain-bind-and-cluster-config.html"/>
    <updated>2015-08-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tomcat%E9%85%8D%E7%BD%AE/tomcat-multiple-domain-bind-and-cluster-config</id>
    <content type="html">
# - 配置Apache虚拟目录

1. 在 /etc/httpd/conf.d 目录中创建 tomcat.conf 文件；
2. 添加以下内容：
## 配置tomcat的常规应用,这里使用 my.wodedata.com 域名
&amp;lt;VirtualHost *:80&amp;gt;   
    ServerName my.wodedata.com 
    ProxyIOBufferSize 8192  
    ProxyRequests Off   
    ProxyVia Full   
    # 把 my.wodedata.com 指向 http://wodedata.com...</content>
  </entry>

  <entry>
    <title>CentOS环境下Apache虚拟目录及负载均衡配置</title>
    <link href="https://luowei.github.io/lamp/apache-virtual-host-config.html"/>
    <updated>2015-07-23T00:00:00+08:00</updated>
    <id>https://luowei.github.io/lamp/apache-virtual-host-config</id>
    <content type="html">
# 创建数据库
CREATE DATABASE IF NOT EXISTS rootls DEFAULT CHARSET utf8 COLLATE utf8_general_ci

# 创建用户并授权
CREATE USER 'rootls'@'localhost' IDENTIFIED BY 'xxxxxx'; 
GRANT ALL ON rootls.* TO 'rootls'@'localhost' ;

# 设置密码
# Set PASSWORD for rootls@localhost = password('xxxxxx') ;

# 登录rootls
mysql -h l...</content>
  </entry>

  <entry>
    <title>一些比较有用的iOS开发者博客</title>
    <link href="https://luowei.github.io/ios/some-useful-iOS-developer-blog.html"/>
    <updated>2015-07-14T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/some-useful-iOS-developer-blog</id>
    <content type="html">
一些比较有用的iOS开发者博客
        objc中国
            NSHipster 中文版 - NSHipster
            Ray Wenderlich | Tutorials for iPhone / iOS Developers and Gamers
            我爱自然语言处理 | I Love Natural Language Processing
            Glow 技术团队博客
            OneV's Den
            sunnyxx的技术博客
            Chun Ti...</content>
  </entry>

  <entry>
    <title>HTTPS的深入理解</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/https-insight.html"/>
    <updated>2015-07-06T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/https-insight</id>
    <content type="html">
HTTPS的深入理解
HTTPS的工作原理

  HTTPS在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。TLS/SSL协议不仅仅是一套加密传输的协议，更是一件经过艺术家精心设计的艺术品，TLS/SSL中使用了非对称加密，对称加密以及HASH算法。握手过程的具体描述如下：


1. 浏览器将自己支持的一套加密规则发送给网站。 
2. 网站从中选出一组加密算法与HASH算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。 
3. 浏览器获得网站证书之后浏览器要做以...</content>
  </entry>

  <entry>
    <title>OAuth2.0深入理解</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/OAuth2.0-insight.html"/>
    <updated>2015-07-04T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/OAuth2.0-insight</id>
    <content type="html">
OAuth2.0深入理解
OAuth简介

  OAuth（开放授权）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。
  OAuth允许用户提供一个令牌，而不是用户名和密码来访问他们存放在特定服务提供者的数据。每一个令牌授权一个特定的网站（例如，视频编辑网站)在特定的时段（例如，接下来的2小时内）内访问特定的资源（例如仅仅是某一相册中的视频）。这样，OAuth让用户可以授权第三方网站访问他们存储在另外服务提供者的某些特定信息，而非所有内容。
  OAuth(俗称1.0)是OpenID的一个补...</content>
  </entry>

  <entry>
    <title>CentOS上LAMP环境搭建及配置</title>
    <link href="https://luowei.github.io/lamp/centOS-install-apache-java-tomcat-php-phpmyadmin.html"/>
    <updated>2015-06-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/lamp/centOS-install-apache-java-tomcat-php-phpmyadmin</id>
    <content type="html">
将以下脚本保存为 lamp.sh , 执行 sh lamp.sh 安装。


#!/bin/sh

# 参考:
# Shell脚本编程30分钟入门:https://github.com/qinjx/30min_guides/blob/master/shell.md
# nstall JAVA 8 (JDK 8u45) on CentOS/RHEL 7/6/5 and Fedora:http://tecadmin.net/install-java-8-on-centos-rhel-and-fedora/
# CentOS开机自动运行程序的脚本:http://blog.csdn.net/j...</content>
  </entry>

  <entry>
    <title>浅谈将兵之才与将将之才</title>
    <link href="https://luowei.github.io/life/general-and-marshal-talent.html"/>
    <updated>2015-06-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/general-and-marshal-talent</id>
    <content type="html">
    帅和将，在古书里经常出现在军队和战场上，一场战争是否能取得胜利，往往得益于帅和将的密切配合。其区别在于：“能领兵者，谓之将也”；“能将将者，谓之帅也”，即帅才比将才高一个层次，偏重于战略思维；而将才是在一定局部范围内能掌控局势，能带领所属出色或顺利完成统帅分派的任务的人，他偏重于战术或方式方法的研究。



　　在现代的企业管理中，经营一个企业也好比持续打一场战争，也需要各类的帅才和将才。往往总经理的职位更需要一个帅才，而下面的各部门负责人更需要一些将才，至于董事长其实更多的是相才。
　　管理上的将才一般能够独挡一面，为企业的骨干，在自己所管辖的范围内能够干出非常不错的业绩。而...</content>
  </entry>

  <entry>
    <title>CentOS上安装ShadowSocks脚本</title>
    <link href="https://luowei.github.io/linux/centOS-install-shadowsocks-shell-script.html"/>
    <updated>2015-05-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/centOS-install-shadowsocks-shell-script</id>
    <content type="html">
将以下脚本保存为 shadowsocks.sh , 执行 sh shadowsocks.sh 安装。


#!/bin/sh

# 参考：
# Pip和Shadowsocks的安装配置教程:http://www.guance.com/611.html
# CentOS6零基础配置shadowsocks服务端完整教程:http://hazelzhu.com/archives/1568
# Linux的简单shell脚本中修改文件操作:http://jsczxy2.iteye.com/blog/673910
# Linux Shell编程入门:http://www.cnblogs.com/...</content>
  </entry>

  <entry>
    <title>决策、目标、计划</title>
    <link href="https://luowei.github.io/life/decisions-goals-plans.html"/>
    <updated>2015-02-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/decisions-goals-plans</id>
    <content type="html">
其实随着年龄的增长，自身积累的增长，自己对自己的人生，在大方向与决策方面能做的选择空间也会越来越小。

人生的确定性与不确定性的比例也就越来越高。

人生的目标可以就有很多，不同的时间段都可能给自己设定不能的目标；好的人生，决策只能一次，总体的方向只能一个方向，就像生命只有一次一样；这一次要说明一个人是做政治的？做文学的？做艺术的？务农的？做工的？做管理的？做科研的？到处跑的？乐享人生什么都没做的？等等总规会有一个定位。

自己必须做出选择，必须定位自己；不对自己人生做出选择，那这个选择权就自然交给别人，或者是你所处在的组织或是环境。

当然通常很少有人能脱离自身环境而自己做出人生选择...</content>
  </entry>

  <entry>
    <title>如果你做的事情毫不费力，就是在浪费时间</title>
    <link href="https://luowei.github.io/life/it's-a-waste-of-time-do-effortlessly.html"/>
    <updated>2014-10-15T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/it's-a-waste-of-time-do-effortlessly</id>
    <content type="html">
原文出处： 钛媒体
曾担任苹果副总裁的Roizen女士提出了八条职业原则，其中关于创业她说：很多怀有雄心壮志的人力求消除工作中的困难，顺利到达梦想彼岸，这是不对的。现实情况是，即使你真的轻松成功，你也会感到无聊。所以，找点困难的事情做吧。创业的美妙之处正在于其艰难。没有安全可言，没有稳定的收入，你必须完全靠自己。

注：本文作者Heidi Roizen系DFJ Venture合伙人，曾任苹果公司主管开发者关系的高级副总裁，女性创业者。

以下是 Roizen 提出的八条原则，她正是利用这些原则来指导自己的工作、建立起广泛的人际网络并不断推动创新。这些过来人的经验对于新入行者弥足珍贵，可...</content>
  </entry>

  <entry>
    <title>一些简单的iOS应用视频教程</title>
    <link href="https://luowei.github.io/ios/ios-game-samples.html"/>
    <updated>2014-10-13T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-game-samples</id>
    <content type="html">
FMDB操作SQLite示例QuizSQLite

&amp;lt;/embed&amp;gt;

直升机越障碍小游戏示例HeliGame

&amp;lt;/embed&amp;gt;

iOS下计算器应用的开发


&amp;lt;/embed&amp;gt;

乒乓球小游戏示例PingPongGame

&amp;lt;/embed&amp;gt;

太空入侵者示例SpaceInvaders

&amp;lt;/embed&amp;gt;

问答示例(智商测试)QuizSample

&amp;lt;/embed&amp;gt;

简单的塔防小游戏TowerDefense

&amp;lt;/embed&amp;gt;

小球跳云梯小游戏DoodleJump

&amp;lt;/embed&amp;gt;...</content>
  </entry>

  <entry>
    <title>学习积累之iOS示例</title>
    <link href="https://luowei.github.io/ios/ios-cocos2dx-game.html"/>
    <updated>2014-10-13T00:00:00+08:00</updated>
    <id>https://luowei.github.io/ios/ios-cocos2dx-game</id>
    <content type="html">
屏幕背景切换Flashlight
http://www.tudou.com/listplay/xs8jxgy4XvQ/59M24Wo-tdU.html

UITableView,UINavigationView的使用
http://www.tudou.com/listplay/xs8jxgy4XvQ/YFYNXET3kRs.html

UIAlertView的使用
http://www.tudou.com/listplay/xs8jxgy4XvQ/YwGeImwTjNA.html

发送Email之EmailDemo
http://www.tudou.com/listplay/xs8j...</content>
  </entry>

  <entry>
    <title>nginx的负载均衡配置</title>
    <link href="https://luowei.github.io/tutorials/nginx-upstream.html"/>
    <updated>2014-10-10T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tutorials/nginx-upstream</id>
    <content type="html">
Nginx负载均衡通过upstream实现,同时Nginx还支持多组的负载均衡,可以配置多个upstream来服务于不同的Server.



  down 表示单前的server暂时不参与负载
  weight  默认为1.weight越大，负载的权重就越大。
  max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回— proxy_next_upstream 模块定义的错误
  fail_timeout:max_fails 次失败后，暂停的时间。
  backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。
...</content>
  </entry>

  <entry>
    <title>我做的一些视频</title>
    <link href="https://luowei.github.io/tutorials/video-tutorials.html"/>
    <updated>2014-09-28T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tutorials/video-tutorials</id>
    <content type="html">
Intellij之JavaEE开发教程
http://www.tudou.com/plcover/4maF4_tJ9uw/

Spring教程
http://www.tudou.com/plcover/w30DGqKxUyY/

从项目实例学习开发
http://www.tudou.com/plcover/SZ6ASAjPlYw/

Intellij开发系列教程
intellij开发系列.01.开发环境的搭建
http://v.youku.com/v_show/id_XNjQ1MjMyMjY0.html?f=21186166

intellij开发系列.02.git版本管理及pom配置...</content>
  </entry>

  <entry>
    <title>Apache虚拟目录、域名关联、端口转发以及防盗链配置</title>
    <link href="https://luowei.github.io/lamp/apache-mutile-virturehost-domains-anti-leech.html"/>
    <updated>2014-09-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/lamp/apache-mutile-virturehost-domains-anti-leech</id>
    <content type="html">
Apache虚拟目录、域名关联、端口转发以及防盗链配置

在上网，或在浏览器输入网址时，细心的就会发现，这个网址有很大的学问。一般网站都是通过域来访问的，一些相关的站点就配置了相应的子域名，如本站主域名为：wodedata.com ,其他相关的站点就配置了子域名进行访问，如：my.wodedata.com,life.wodedata.com,fdm.wodedata.com等等。 
   在购买了域名之后，就可以设置无数个子域名了。当然还有一种方式是在域名后面以/分隔，设置不路径指向不同的网站内容。
   当然还有一种情况就是，java写的web项目布署在tomcat当中，百tomca...</content>
  </entry>

  <entry>
    <title>从笔迹看性格</title>
    <link href="https://luowei.github.io/life/character-by-handwriting.html"/>
    <updated>2013-12-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/life/character-by-handwriting</id>
    <content type="html">
即使是因为意外事故，不能用手而学会用脚趾头那笔写字的人，也会表现出和用手写字时一样的习惯。因为与其说人是用手写字，不如说是用脑写子。也就是说，人的笔迹会如实地暴露出你的潜意识。

从笔迹看性格1

写的字左边略微往上，亦即稍微往右倾斜的人，属于“感情型”。而且往右倾斜的幅度越大者，感情越丰富。称为“We 型人”。

反之，写的字右边往上，亦即稍微往左倾斜的人，属于“理论型”。可判断为有抑制感情的倾向，称为“Me 型人”。

写的字既不偏左，也不偏右，完全像方正铅字般的人，是超乎必要的谨慎而过度压抑自己的人，几乎不会对别人敞开心胸。

从笔迹看性格2

给你一张全新的纸，请对方在上面随意...</content>
  </entry>

  <entry>
    <title>ssh隧道、端口转发及内网穿透</title>
    <link href="https://luowei.github.io/tutorials/ssh-tunnel-forward-intranet-strike.html"/>
    <updated>2013-11-08T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tutorials/ssh-tunnel-forward-intranet-strike</id>
    <content type="html">
ssh隧道、端口转发及内网穿透

ssh相关知识点概要

  SSH是一种安全的传输协议，目前最多的主要是用于连接服务器，除了这个之外它的隧道转发功能也是非常强大有用的。
  
    下面介绍一下三个非常强大的命令：

     ssh -C -f -N -g -L listen_port:DST_Host:DST_port user@Tunnel_Host 
 ssh -C -f -N -g -R listen_port:DST_Host:DST_port user@Tunnel_Host 
 ssh -C -f -N -g -D listen_port user@Tunnel_H...</content>
  </entry>

  <entry>
    <title>macOS下安装配置Jekyll</title>
    <link href="https://luowei.github.io/tutorials/macOS-install-jekyll.html"/>
    <updated>2013-05-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/tutorials/macOS-install-jekyll</id>
    <content type="html">
在macOS 10.11+下安装配置Jekyll


  确保系统已经有环境：Ruby(v1.9.3+),RubyGems,NodeJS,Python 2.7 ;
  安装Xcode Command-Line Tools：xcode-select --install；
  安装Jekyll:sudo gem install -n /usr/local/bin jekyll，检查版本：jekll -v；
  安装Github Pages插件：sudo gem install -n /usr/local/bin github-pages；
  查看Gems列表：gem list；
  启动...</content>
  </entry>

  <entry>
    <title>作者简介</title>
    <link href="https://luowei.github.io/author/hello-world.html"/>
    <updated>2013-01-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/author/hello-world</id>
    <content type="html">
个人简介


  维唯为为是wodedata.com背后的男人；
  是一个有激情干劲、个性随和的年轻小伙；
  是一个热爱编程并有着多年开发工作经验的工作狂；
  是一个喜欢学习新知识、研究新技术、热爱分享的IT达人；
  是一个业余爱好各种技术DIY、技术分享、交流技术的技术人；
  是一个喜欢和知心的朋友畅言社会生活工作而无所顾虑的喝酒聊天客；
  是一个技术路上踏实不畏艰难，虽智商平平但内心却向往图灵、冯诺依曼的程序员；


个人资料汇总

  MyGitHub：https://github.com/luowei
  网易博客：http://blog.163.com/luowe...</content>
  </entry>

  <entry>
    <title>链表相关面试题</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/linked-list-interview-question.html"/>
    <updated>2012-10-05T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/linked-list-interview-question</id>
    <content type="html">
链表相关面试题
判断单链表是否存在环

  设置两个指针(fast, slow)，初始值都指向头，slow每次前进一步，fast每次前进二步，如果链表存在环，则fast必定先进入环，而slow后进入环，两个指针必定相遇。(当然，fast先行头到尾部为NULL，则为无环链表)程序如下：


bool IsExitsLoop(List *head){
   List *slow = head, *fast = head;
    
   while ( fast &amp;amp;&amp;amp; fast-&amp;gt;next ){
       slow = slow-&amp;gt;next;
       ...</content>
  </entry>

  <entry>
    <title>排序及二分查找</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/sorting-and-binary-search.html"/>
    <updated>2012-10-03T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/sorting-and-binary-search</id>
    <content type="html">

  
    冒泡排序:是对所有相邻记录的关键字值进行比效，如果是逆顺（a[j]&amp;gt;a[j+1]），则将其交换，最终达到有序化;
  



  
    选择排序:第一次从R[0]-R[n-1]中选取最小值，与R[0]交换，第二次从R[1]-R[n-1]中选取最小值，与R[1]交换，第三次从R[2]-R[n-1]中选取最小值，与R[2]交换，…，第i次从R[i-1]-R[n-1]中选取最小值，与R[i-1]交换，…第n-1次从R[n-2]-R[n-1]中选取最小值，与R[n-2]交换，总共通过n-1次，得到一个按排序码从小到大排列的有序序列。
  



  
    插入排序...</content>
  </entry>

  <entry>
    <title>两数相乘小数位无限制</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/high-precision-algorithm.html"/>
    <updated>2012-10-02T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/high-precision-algorithm</id>
    <content type="html">
两个数相乘，小数点后位数没有限制，请写一个高精度算法


  解题思路：将两组小数用数组存储，计算机两组小数点位数的总和，将小数点剔除，将小数点后面的位数向前移动一位。即开始求两个大整数的乘积。用递归的思路输出，得到的乘积，同时通过计算的小数点的位数，来判定什么时候输出小数点。



  求两个大整数的乘积的思路：用结点来存储乘积的每一位，可以是数值不受限制。


关键函数：

istream&amp;amp;getline(char *pch,int nCount,char delime='\n')
 	extern char * strchr(char *str,char characte...</content>
  </entry>

  <entry>
    <title>用宏比较两数大小</title>
    <link href="https://luowei.github.io/%E9%9D%A2%E8%AF%95/macro-comparing-two-numbers-size.html"/>
    <updated>2012-10-01T00:00:00+08:00</updated>
    <id>https://luowei.github.io/%E9%9D%A2%E8%AF%95/macro-comparing-two-numbers-size</id>
    <content type="html">
请定义一个宏，比较两个数a、b的大小，不能使用大于、小于、if语句 .

方法一：
#define max(a,b) ((((long)((a)-(b)))&amp;amp;0x80000000)?(b):(a))  
若a&amp;gt;b，则a-b的二进制最高位为0，与上任何数还是0，所以大数为a；
否则，a-b为负数，最高位为1，与上0x80000000（最高位为1其他为0）之后为1，所以此时最大数为b。

方法二：
#define max(a,b) ((((a)-(b))&amp;amp;(1&amp;lt;&amp;lt;31))?(b):(a)) 
 
方法三：
#define max(a,b) (((abs((...</content>
  </entry>

  <entry>
    <title>Linux下常见文件解压及压缩命令</title>
    <link href="https://luowei.github.io/linux/linux-compress-decompress-comand.html"/>
    <updated>2011-09-23T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/linux-compress-decompress-comand</id>
    <content type="html">
Linux下常见文件解压及压缩命令

  解压及压缩命令大全


.tar 
解包：tar xvf FileName.tar 
打包：tar cvf FileName.tar DirName 
（注：tar是打包，不是压缩！） 
——————————————— 
.gz 
解压 1：gunzip FileName.gz 
解压2：gzip -d FileName.gz 
压缩：gzip FileName 
.tar.gz 和 .tgz 
解压：tar zxvf FileName.tar.gz 
压缩：tar zcvf FileName.tar.gz DirName 
—————————...</content>
  </entry>

  <entry>
    <title>Linux下常用的系统相关信息查看命令</title>
    <link href="https://luowei.github.io/linux/linux-useful-info-comand.html"/>
    <updated>2011-09-22T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/linux-useful-info-comand</id>
    <content type="html">
Linux下常用的系统相关信息查看命令

  查看文本的常命令：cat 及 tail -f。


日志文件说明

/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 
/var/log/secure 与安全相关的日志信息 
/var/log/maillog 与邮件相关的日志信息 
/var/log/cron 与定时任务相关的日志信息 
/var/log/spooler 与UUCP和news设备相关的日志信息 
/var/log/boot.log 守护进程启动和停止相关的日志消息


系统信息

# uname -a   # 查看...</content>
  </entry>

  <entry>
    <title>CentOS常用的操作命令</title>
    <link href="https://luowei.github.io/linux/centOS-useful-comand.html"/>
    <updated>2011-09-21T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/centOS-useful-comand</id>
    <content type="html">
CentOS常用的操作命令

用户相关

  创建新用户，使用useradd命令完成一个新用户的初始化设置工作,命令:useradd luowei &amp;lt;回车&amp;gt;。
    
      useradd所做的初始化操作包括在/home目录下为luowei帐号建立一个名为luowei的主目录。
      useradd的初始化操作还包括为用户单独建立一个与用户名同名的组(luoweii组)。这叫用户私有组的机制，与默认组机制相对应。对用户分组一是方便管理，二是可以明确权限。
    
  
  为新用户设置密码，使用passwd为这个新用户设置密码，命令:passwd luowe...</content>
  </entry>

  <entry>
    <title>CentOS最常用命令及快捷键整理</title>
    <link href="https://luowei.github.io/linux/centOS-common-comand-and-shutkeys.html"/>
    <updated>2011-09-21T00:00:00+08:00</updated>
    <id>https://luowei.github.io/linux/centOS-common-comand-and-shutkeys</id>
    <content type="html">
CentOS最常用命令及快捷键整理
常用命令:

  文件和目录:


# cd /home                        进入 '/home' 目录
# cd ..                                返回上一级目录
# cd ../..                             返回上两级目录
# cd -                                 返回上次所在目录
# cp file1 file2                    将file1复制为file2
# cp -a dir1 dir2  ...</content>
  </entry>


</feed>
